/*
题目描述：
给定一个二叉树，原地将它展开为一个单链表。

例如，给定二叉树

    1
   / \
  2   5
 / \   \
3   4   6
将其展开为：

1
 \
  2
   \
    3
     \
      4
       \
        5
         \
          6
*/

/*
思路：前序遍历，将结果保存在列表中，然后遍历列表进行展开操作
时间复杂度:O(n)
空间复杂度:O(n)

注：还有其他至少三种解法，后续思考
*/

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    List<TreeNode> preOrder = new ArrayList();
    public void flatten(TreeNode root) {
        TreeNode p = new TreeNode();
        preSearch(root);
        for(TreeNode node: preOrder){
            p.right = node;
            p.left = null;
            p = p.right;
        }
    }

    public void preSearch(TreeNode p){
        if(p == null) return;
        preOrder.add(p);
        preSearch(p.left);
        preSearch(p.right);
    }
}
