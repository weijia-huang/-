/*
题目描述：
给定一组不含重复元素的整数数组 nums，返回该数组所有可能的子集（幂集）。

说明：解集不能包含重复的子集。

示例:
输入: nums = [1,2,3]
输出:
[
  [3],
  [1],
  [2],
  [1,2,3],
  [1,3],
  [2,3],
  [1,2],
  []
]
*/

/*
思路：dfs。对每层搜索都有两种情况，加/不加nums[i]。后者直接进入下一层dfs，前者将当前list添加入结果，然后进入下一层dfs。
时间复杂度：O(2^N)
空间复杂度：O(N * 2^N)
补充：对于排列/组合/子集问题，都可以用二进制编码的方式来解决
*/

class Solution {
    public List<List<Integer>> subsets(int[] nums) {
        List<List<Integer>> res = new ArrayList();
        res.add(new ArrayList());
        dfs(nums, res, 0, new ArrayList());
        return res;
    }

    public void dfs(int[] nums, List<List<Integer>> res, int index, List<Integer> temp){
        if(index < nums.length){
            dfs(nums, res, index + 1, temp);
            temp.add(nums[index]);
            res.add(new ArrayList(temp));
            dfs(nums, res, index + 1, temp);
            temp.remove(temp.size() - 1);
        }
    }
}
