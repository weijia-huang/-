/*
题目描述：
给定一个 n × n 的二维矩阵表示一个图像。
将图像顺时针旋转 90 度。

说明：
你必须在原地旋转图像，这意味着你需要直接修改输入的二维矩阵。请不要使用另一个矩阵来旋转图像。

示例 1:
给定 matrix = 
[
  [1,2,3],
  [4,5,6],
  [7,8,9]
],
原地旋转输入矩阵，使其变为:
[
  [7,4,1],
  [8,5,2],
  [9,6,3]
]

示例 2:
给定 matrix =
[
  [ 5, 1, 9,11],
  [ 2, 4, 8,10],
  [13, 3, 6, 7],
  [15,14,12,16]
], 
原地旋转输入矩阵，使其变为:
[
  [15,13, 2, 5],
  [14, 3, 4, 1],
  [12, 6, 8, 9],
  [16, 7,10,11]
]
*/

/*
思路：简单的数学问题，转置+按列翻转 即可。
时间复杂度:O(n^2)
*/

class Solution {
    public void rotate(int[][] matrix) {
        int rows = matrix.length, cols = matrix[0].length;
        //转置
        for(int row = 0; row < rows; row++){
            for(int col = row; col < cols; col++){
                swap(matrix, row, col, col, row);
            }
        }
        //按列翻转
        for(int row = 0; row < rows; row++){
            for(int col = 0; col < cols >> 1; col++){
                swap(matrix, row, col, row, cols - col - 1);
            }
        }
    }

    public void swap(int[][] matrix, int x1, int y1, int x2, int y2){
        int temp = matrix[x1][y1];
        matrix[x1][y1] = matrix[x2][y2];
        matrix[x2][y2] = temp;
    }
}
