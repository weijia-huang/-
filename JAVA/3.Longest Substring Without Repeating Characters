/*
题目描述
给定一个字符串，请你找出其中不含有重复字符的 最长子串 的长度。

示例 1:
输入: "abcabcbb"
输出: 3 
解释: 因为无重复字符的最长子串是 "abc"，所以其长度为 3。
示例 2:
输入: "bbbbb"
输出: 1
解释: 因为无重复字符的最长子串是 "b"，所以其长度为 1。
示例 3:
输入: "pwwkew"
输出: 3
解释: 因为无重复字符的最长子串是 "wke"，所以其长度为 3。
     请注意，你的答案必须是 子串 的长度，"pwke" 是一个子序列，不是子串。
*/

/*
注意点：
1.本题可用滑动窗口的思路来做
2.遍历结束后未统计最后一个子串的长度，所以要额外加上一次统计
*/

import java.util.*;
class Solution {
    public int lengthOfLongestSubstring(String s) {
        if(s == null || s.length() == 0){
            return 0;
        }
        Map<Character, Integer> map = new HashMap<>();
        char c = 0;
        int max = 0;
        int start = 0;
        for(int i = 0; i < s.length(); i++){
            c = s.charAt(i);
            if(map.containsKey(c) && map.get(c) >= start){
                max = Math.max(i - start, max);
                start = map.get(c) + 1;
            }
            map.put(c, i);
        }
        max = Math.max(max, s.length() - start);
        return max;
    }
}
